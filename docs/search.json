[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Website for the 2025 Smithsonian NMNH MitoPilot workshop.\nComplete R script for this workshop."
  },
  {
    "objectID": "qmd/full_R_script/R-script.html",
    "href": "qmd/full_R_script/R-script.html",
    "title": "Full R script",
    "section": "",
    "text": "# SI NMNH MitoPilot workshop\n# June 13, 2025\n# https://dmacguigan.github.io/MitoPilot_workshop_2025/\n# author: Dan MacGuigan\n# macguigand@si.edu\n\n###########################################################################\n# INSTALL MitoPilot\n###########################################################################\n\nif (!requireNamespace(\"remotes\", quietly = TRUE)) {\n  install.packages(\"remotes\")\n}\nif (!requireNamespace(\"BiocManager\", quietly = TRUE)) {\n  install.packages(\"BiocManager\")\n}\nBiocManager::install(\"Smithsonian/MitoPilot\")\n\n###########################################################################\n# UPDATE MitoPilot (if needed)\n###########################################################################\n\nremove.packages(\"MitoPilot\")\nBiocManager::install(\"Smithsonian/MitoPilot\")\n.rs.restartR()\n\n###########################################################################\n# LOADING MitoPilot\n###########################################################################\n\nlibrary(MitoPilot)",
    "crumbs": [
      "Full R script"
    ]
  },
  {
    "objectID": "qmd/setup/01_Hydra.html",
    "href": "qmd/setup/01_Hydra.html",
    "title": "01 - Hydra cluster setup",
    "section": "",
    "text": "You will need an account to access the Smithsonian Hyrda computing cluster. Instructions are available here.",
    "crumbs": [
      "Setup",
      "01 - Hydra cluster setup"
    ]
  },
  {
    "objectID": "qmd/setup/01_Hydra.html#access-to-the-hydra-cluster",
    "href": "qmd/setup/01_Hydra.html#access-to-the-hydra-cluster",
    "title": "01 - Hydra cluster setup",
    "section": "",
    "text": "You will need an account to access the Smithsonian Hyrda computing cluster. Instructions are available here.",
    "crumbs": [
      "Setup",
      "01 - Hydra cluster setup"
    ]
  },
  {
    "objectID": "qmd/setup/01_Hydra.html#first-time-setup",
    "href": "qmd/setup/01_Hydra.html#first-time-setup",
    "title": "01 - Hydra cluster setup",
    "section": "First time setup",
    "text": "First time setup\nWe have submitted a request to the Hydra team for installation of a Nextflow module. But for now, you will need to install your own copy of Nextflow on the cluster. Login to Hydra and run the following.\n# Nextflow installation instructions\n# from https://www.nextflow.io/docs/latest/install.html\ncd ~\n# load Java module, needed by Nextflow\nmodule load tools/java/21.0.2\n# install Nextflow\ncurl -s https://get.nextflow.io | bash \n# make Nextflow executable\nchmod +x nextflow \nThere will now be an executable nextflow file in your home directory. You should move it to a location that is in your PATH. For example:\n # create bin directory, if needed\nmkdir ~/bin\n# move nextflow to bin directory\nmv ~/nextflow ~/bin/nextflow \n# add bin directory to PATH, in case it's not already there\necho 'export PATH=\"${HOME}/bin:${PATH}\"' &gt;&gt; ~/.bashrc \n# reload your bash configuration file\nsource ~/.bashrc\nThis should allow you to call nextflow from anywhere on the cluster.\n\n\n\n\n\n\nImportant\n\n\n\nYou must load the Hydra Java module (module load tools/java/21.0.2) whenever you wish to use Nextflow.",
    "crumbs": [
      "Setup",
      "01 - Hydra cluster setup"
    ]
  },
  {
    "objectID": "qmd/setup/02_RstudioServer.html",
    "href": "qmd/setup/02_RstudioServer.html",
    "title": "02 - RStudio server",
    "section": "",
    "text": "We will use RStudio server to run MitoPilot. RStudio server on Hydra functions just like the normal RStudio on your local computer, except that you are accessing it remotely.\nThere are two methods to access RStudio server on Hydra.\n\n\nThe Hydra Team recently launched an interactive R Studio environment that is accessible directly via a browser, at https://galaxy.si.edu/R4.\nHydra users can leverage this server to test, debug, and develop R based workflows using the interactive RStudio GUI (currently running R 4.4.3).\nBy logging in with your Hydra account credentials, users will have access to the storage under /pool, /scratch and /store. This server offers resources totaling 192 CPUs and 1.5 T of RAM.\nNotes:\n\nThis is a shared resource and should be used accordingly. Long running jobs or jobs requiring the entire resources of the server would be more appropriate as a job submission.\nThis server is only accessible from trusted computers, not on the public internet. For technical reasons, to access this resource via telework.si.edu, go to https://galaxy.si.edu and then choose the “R4 v443” option.\nThis is a new resource - please be patient as we test this offering with our user community. We will evaluate this test once Hydra is moved to the new datacenter and decide whether it should be kept or altered in any way.\n\n\n\n\nTo launch RStudio server on Hydra, run the following.\n# avoid package conflicts (may not be necessary for all users)\nconda deactivate \n# load the RStudio server module\nmodule load tools/R/RStudio/server\n# launch RStudio server\nstart-rstudio-server\n\n\n\n\n\n\nNote\n\n\n\nIf this is your first time launching RStudio server, you may be asked to run a different command.\n\n\nYou will see something like this printed to your screen.\nstart-rstudio-server: starting RStudio server on host=login02 and port=8787\n  you need to create a ssh tunnel on your local machine with\n    ssh -N -L 8787:login02:8787 macguigand@hydra-login01.si.edu\n\nPoint your browser to http://localhost:8787 on your local machine.\nUse Control+C in this window to kill the server when done.\n\nTTY detected. Printing informational message about logging configuration. Logging configuration loaded from '/etc/rstudio/logging.conf'. Logging to '/home/macguigand/.local/share/rstudio/log/rserver.log'.\n\n\n\n\n\n\nWhy can’t I connect?\n\n\n\nIf you get a message saying “ERROR system error 98 (Address already in use)”, someone else has a tunnel established with the default port (8787). To fix this, try using a different port, e.g. start-rstudio-server -port 8890. Any port number between 1025-65535 is allowed.\n\n\nLeave this cluster terminal window open, open a new terminal window on your local computer, and run the ssh command printed by start-rstudio-server.\nssh -N -L 8787:login02:8787 macguigand@hydra-login01.si.edu\nEnter your Hydra password when prompted. If nothing happens, this means that you have successfully established a SSH tunnel and can connect to RStudio server.\nLeaving both terminal windows open, enter http://localhost:YOUR_PORT_NUMBER in a web browser. We recommend using Chrome or Firefox. There are some known issues running MitoPilot with Safari.\nEnter your cluster login credentials to access the RStudio server. This should open a full RStudio session in your browser. Any R commands run in this new window will execute on the cluster.",
    "crumbs": [
      "Setup",
      "02 - RStudio server"
    ]
  },
  {
    "objectID": "qmd/setup/02_RstudioServer.html#launching-rstudio-server",
    "href": "qmd/setup/02_RstudioServer.html#launching-rstudio-server",
    "title": "02 - RStudio server",
    "section": "",
    "text": "We will use RStudio server to run MitoPilot. RStudio server on Hydra functions just like the normal RStudio on your local computer, except that you are accessing it remotely.\nThere are two methods to access RStudio server on Hydra.\n\n\nThe Hydra Team recently launched an interactive R Studio environment that is accessible directly via a browser, at https://galaxy.si.edu/R4.\nHydra users can leverage this server to test, debug, and develop R based workflows using the interactive RStudio GUI (currently running R 4.4.3).\nBy logging in with your Hydra account credentials, users will have access to the storage under /pool, /scratch and /store. This server offers resources totaling 192 CPUs and 1.5 T of RAM.\nNotes:\n\nThis is a shared resource and should be used accordingly. Long running jobs or jobs requiring the entire resources of the server would be more appropriate as a job submission.\nThis server is only accessible from trusted computers, not on the public internet. For technical reasons, to access this resource via telework.si.edu, go to https://galaxy.si.edu and then choose the “R4 v443” option.\nThis is a new resource - please be patient as we test this offering with our user community. We will evaluate this test once Hydra is moved to the new datacenter and decide whether it should be kept or altered in any way.\n\n\n\n\nTo launch RStudio server on Hydra, run the following.\n# avoid package conflicts (may not be necessary for all users)\nconda deactivate \n# load the RStudio server module\nmodule load tools/R/RStudio/server\n# launch RStudio server\nstart-rstudio-server\n\n\n\n\n\n\nNote\n\n\n\nIf this is your first time launching RStudio server, you may be asked to run a different command.\n\n\nYou will see something like this printed to your screen.\nstart-rstudio-server: starting RStudio server on host=login02 and port=8787\n  you need to create a ssh tunnel on your local machine with\n    ssh -N -L 8787:login02:8787 macguigand@hydra-login01.si.edu\n\nPoint your browser to http://localhost:8787 on your local machine.\nUse Control+C in this window to kill the server when done.\n\nTTY detected. Printing informational message about logging configuration. Logging configuration loaded from '/etc/rstudio/logging.conf'. Logging to '/home/macguigand/.local/share/rstudio/log/rserver.log'.\n\n\n\n\n\n\nWhy can’t I connect?\n\n\n\nIf you get a message saying “ERROR system error 98 (Address already in use)”, someone else has a tunnel established with the default port (8787). To fix this, try using a different port, e.g. start-rstudio-server -port 8890. Any port number between 1025-65535 is allowed.\n\n\nLeave this cluster terminal window open, open a new terminal window on your local computer, and run the ssh command printed by start-rstudio-server.\nssh -N -L 8787:login02:8787 macguigand@hydra-login01.si.edu\nEnter your Hydra password when prompted. If nothing happens, this means that you have successfully established a SSH tunnel and can connect to RStudio server.\nLeaving both terminal windows open, enter http://localhost:YOUR_PORT_NUMBER in a web browser. We recommend using Chrome or Firefox. There are some known issues running MitoPilot with Safari.\nEnter your cluster login credentials to access the RStudio server. This should open a full RStudio session in your browser. Any R commands run in this new window will execute on the cluster.",
    "crumbs": [
      "Setup",
      "02 - RStudio server"
    ]
  },
  {
    "objectID": "qmd/setup/04_load.html",
    "href": "qmd/setup/04_load.html",
    "title": "04 - load MitoPilot",
    "section": "",
    "text": "To load the MitoPilot R package, run library(MitoPilot) within your RStudio server session. You can now utilize all of MitoPilot’s functions, such as initializing a project or opening the R Shiny GUI.\nWe’re now ready to start the example project!",
    "crumbs": [
      "Setup",
      "04 - load MitoPilot"
    ]
  },
  {
    "objectID": "qmd/setup/04_load.html#loading-the-mitopilot-package",
    "href": "qmd/setup/04_load.html#loading-the-mitopilot-package",
    "title": "04 - load MitoPilot",
    "section": "",
    "text": "To load the MitoPilot R package, run library(MitoPilot) within your RStudio server session. You can now utilize all of MitoPilot’s functions, such as initializing a project or opening the R Shiny GUI.\nWe’re now ready to start the example project!",
    "crumbs": [
      "Setup",
      "04 - load MitoPilot"
    ]
  },
  {
    "objectID": "qmd/setup/03_install.html",
    "href": "qmd/setup/03_install.html",
    "title": "03 - MitoPilot installation",
    "section": "",
    "text": "To install MitoPilot, use the RStudio server window to run the following. This might take a while.\n{R eval=F\nYou may see a warning like this:\nInstallation paths not writeable, unable to update packages\n  path: /share/apps/bioinformatics/R/4.4.1/lib64/R/library\nThis is not a problem. Some R packages are installed at the Hydra system level and cannot be updated by the user.\nIf there were no other error messages, you’re ready to start using MitoPilot!",
    "crumbs": [
      "Setup",
      "03 - MitoPilot installation"
    ]
  },
  {
    "objectID": "qmd/setup/03_install.html#first-time-installation",
    "href": "qmd/setup/03_install.html#first-time-installation",
    "title": "03 - MitoPilot installation",
    "section": "",
    "text": "To install MitoPilot, use the RStudio server window to run the following. This might take a while.\n{R eval=F\nYou may see a warning like this:\nInstallation paths not writeable, unable to update packages\n  path: /share/apps/bioinformatics/R/4.4.1/lib64/R/library\nThis is not a problem. Some R packages are installed at the Hydra system level and cannot be updated by the user.\nIf there were no other error messages, you’re ready to start using MitoPilot!",
    "crumbs": [
      "Setup",
      "03 - MitoPilot installation"
    ]
  },
  {
    "objectID": "qmd/setup/03_install.html#updating-mitopilot",
    "href": "qmd/setup/03_install.html#updating-mitopilot",
    "title": "03 - MitoPilot installation",
    "section": "Updating MitoPilot",
    "text": "Updating MitoPilot\nIf you need to update MitoPilot, run the following commands in RStudio server.\n\nremove.packages(\"MitoPilot\")\nBiocManager::install(\"Smithsonian/MitoPilot\")\n.rs.restartR()\n\nThis will remove the old package, install the most recent version, and restart your R session. After updating, you will need to reload the package with library(MitoPilot).\nWe also recommend clearing your Singularity cache with singularity cache clean whenever you update MitoPilot. This will ensure you are using the latest MitoPilot Singularity image.",
    "crumbs": [
      "Setup",
      "03 - MitoPilot installation"
    ]
  },
  {
    "objectID": "qmd/example_project/01_init.html",
    "href": "qmd/example_project/01_init.html",
    "title": "01 - initialize project",
    "section": "",
    "text": "MitoPilot comes pre-packaged with a test project consisting of Illumina data for 13 fish species.\nTo get started, we’ll need to initialize the test project with the R function MitoPilot::new_test_project. This function will download the data and set up a new project directory.\n\n\n\n\n\n\nNote\n\n\n\nTo initialize a MitoPilot with your own data, use the R function MitoPilot::new_project instead. You will need to additional information such as a mapping file and sequence data.\n\n\n\n# load the package\nlibrary(MitoPilot)\n\n# specify the directory where your test project will be created\n# if the directory does not exist, MitoPilot will create it\nwd = \"/pool/public/genomics/macguigand/MitoPilot/testing/2025_06_10\"\n\n# specify an execution environment, \"local\", \"NMNH_Hydra\", or \"NOAA_SEDNA\"\nex = \"NMNH_Hydra\"\n\n# initialize the test project\nMitoPilot::new_test_project(\n    path = wd,\n    executor = ex,\n    full_size = FALSE,\n    Rproj = FALSE\n)\n\nIf the test project was successfully initialized, you should see the following message.\nCreating project directory: /pool/public/genomics/macguigand/MitoPilot/testing/2025_06_10\nSRR22396794 - Psychrolutes paradoxus\nSRR22396940 - Psenes pellucidus\nSRR22396740 - Hoplostethus occidentalis\nSRR21844202 - Fundulus majalis\nSRR22396640 - Xyrichtys novacula\nSRR22396732 - Gephyroberyx darwinii\nSRR22396627 - Gigantura indica\nSRR21843972 - Stomias affinis\nSRR22396843 - Conger oceanicus\nSRR22396668 - Erotelis smaragdus\nSRR22396758 - Upeneus parvus\nSRR22396865 - Paraconger caudilimbatus\nProject initialized successfully.\nPlease open and review the .config file to ensure all required options are specified.\nThe new project directory contains a hidden file .config, which you can inspect if you wish. This file contains parameters that will be used by Nextflow to run the MitoPilot analysis workflow. All of the default settings in the config should be fine for the test project.",
    "crumbs": [
      "Example Fish Project",
      "01 - initialize project"
    ]
  },
  {
    "objectID": "qmd/example_project/01_init.html#test-project-setup",
    "href": "qmd/example_project/01_init.html#test-project-setup",
    "title": "01 - initialize project",
    "section": "",
    "text": "MitoPilot comes pre-packaged with a test project consisting of Illumina data for 13 fish species.\nTo get started, we’ll need to initialize the test project with the R function MitoPilot::new_test_project. This function will download the data and set up a new project directory.\n\n\n\n\n\n\nNote\n\n\n\nTo initialize a MitoPilot with your own data, use the R function MitoPilot::new_project instead. You will need to additional information such as a mapping file and sequence data.\n\n\n\n# load the package\nlibrary(MitoPilot)\n\n# specify the directory where your test project will be created\n# if the directory does not exist, MitoPilot will create it\nwd = \"/pool/public/genomics/macguigand/MitoPilot/testing/2025_06_10\"\n\n# specify an execution environment, \"local\", \"NMNH_Hydra\", or \"NOAA_SEDNA\"\nex = \"NMNH_Hydra\"\n\n# initialize the test project\nMitoPilot::new_test_project(\n    path = wd,\n    executor = ex,\n    full_size = FALSE,\n    Rproj = FALSE\n)\n\nIf the test project was successfully initialized, you should see the following message.\nCreating project directory: /pool/public/genomics/macguigand/MitoPilot/testing/2025_06_10\nSRR22396794 - Psychrolutes paradoxus\nSRR22396940 - Psenes pellucidus\nSRR22396740 - Hoplostethus occidentalis\nSRR21844202 - Fundulus majalis\nSRR22396640 - Xyrichtys novacula\nSRR22396732 - Gephyroberyx darwinii\nSRR22396627 - Gigantura indica\nSRR21843972 - Stomias affinis\nSRR22396843 - Conger oceanicus\nSRR22396668 - Erotelis smaragdus\nSRR22396758 - Upeneus parvus\nSRR22396865 - Paraconger caudilimbatus\nProject initialized successfully.\nPlease open and review the .config file to ensure all required options are specified.\nThe new project directory contains a hidden file .config, which you can inspect if you wish. This file contains parameters that will be used by Nextflow to run the MitoPilot analysis workflow. All of the default settings in the config should be fine for the test project.",
    "crumbs": [
      "Example Fish Project",
      "01 - initialize project"
    ]
  },
  {
    "objectID": "qmd/example_project/01_init.html#launching-the-mitopilot-gui",
    "href": "qmd/example_project/01_init.html#launching-the-mitopilot-gui",
    "title": "01 - initialize project",
    "section": "Launching the MitoPilot GUI",
    "text": "Launching the MitoPilot GUI\nWe can now launch the R Shiny Graphical User Interface (GUI) to examine our test project and start the MitoPilot analysis pipeline.\n\n# the function to launch the GUI \n# must be called from within your project directory\nwd = \"/pool/public/genomics/macguigand/MitoPilot/testing/2025_06_10\"\nsetwd(wd)\nMitoPilot::MitoPilot()\n\n\n\n\nFig. 1\n\n\nNice! We can see some basic information about our samples. When initializing your own project, this is pulled from the mapping CSV file.\nThe dropdown menu at the top left switches between the different MitoPilot modules: Assemble, Annotate, and Export. If necessary, the circular arrow button in the top left will refresh the current table.\n\n\n\nFig. 2\n\n\nClicking on a column name will sort the table by that column.\n\n\n\nFig. 3\n\n\nYou can filter samples using the search box in the top right. Most columns can also be filtered using the text boxes at the top of the table.\n\n\n\nFig. 4\n\n\nTo the left of the sample ID column are two icons. The first icon shows whether the sample is locked or unlocked. If a sample is unlocked, it will be included when running the current pipeline module. A locked sample cannot be edited for the current module, but will be made available for the next pipeline module. You can toggle the lock by selecting the sample (check mark), then pressing LOCK at the top of the window. Multiple samples can be locked or unlocked simultaneously.\n\n\n\nFig. 5\n\n\nThe other icon shows the state of the sample. These states vary depending on the analysis module and will be automatically updated when running the pipeline. However, you can also manually change the state of a sample using the STATE button. For example, in the Assemble module you could prevent samples from running through the pipeline by manually setting their states to Hold / Waiting.\n\n\n\nFig. 6",
    "crumbs": [
      "Example Fish Project",
      "01 - initialize project"
    ]
  },
  {
    "objectID": "qmd/example_project/01_init.html#modifying-pipeline-parameters",
    "href": "qmd/example_project/01_init.html#modifying-pipeline-parameters",
    "title": "01 - initialize project",
    "section": "Modifying Pipeline Parameters",
    "text": "Modifying Pipeline Parameters\nWithin the GUI, we can modify options for each step of the current pipeline module. Click on one of the default links in the Preprocess Opts column.\n\n\n\nFig. 7\n\n\nHere you can see the default options for pre-processing your raw FASTQ files. We can modify these by clicking the edit checkbox. Let’s change the memory to 20 GB. You could also change the options passed to fastp, but we’ll keep those at the defaults for now.\n\n\n\nFig. 8\n\n\nWe can save these new parameter options by clicking on the Parameter set name box, typing a new name, and clicking Add YOUR NEW NAME... in the dropdown. Finally, click Update in the bottom right to save your selection.\n\n\n\nFig. 9\n\n\nOnce you’ve saved a new parameter set, you can easily access it again using the dropdown menu. In the screenshot below, you can also see another parameter set called “test” that I created.\n\n\n\nFig. 10\n\n\nAfter clicking Update, your table should now show test for all samples in the Preprocess Opts column.\n\n\n\nFig. 11\n\n\nYou can set different parameters for different samples by simply selecting the set you want to change and repeating the above process. But for this test dataset, let’s keep everything consistent.\nLet’s also change the Assembly Opts. Repeat the process above, and creating a new high_mem setting with 6 CPUs and 36 GB of memory.\n\n\n\nFig. 12\n\n\nThe Assembly Opts window has more options to tinker with. With the Assembler dropdown menu, you can choose between GetOrganalle and MitoFinder.\nGetOrganelle is the default assembler for MitoPilot, as it is considerably faster. The downside is that it requires good reference mitogenomes. Thankfully, there are many high-quality fish mitogenomes available. MitoFinder may be a better choice for clades with few reference sequences.\nYou can modify the parameters for GetOrganalle, including the seeds and labels databases. The default fish reference databases are downloaded from the MitoPilot GitHub repository. You could use custom databases by providing the full path to the appropriate FASTA files on your local computer or cluster.\nLikewise, you could provide a custom .gb reference database for MitoFinder. The default option is the Danio rerio reference mitogenome (GenBank NC_002333.2).\nSee our documentation for more info about custom GetOrganalle or MitoFinder databases,\nFor the test project, we’ll stick with GetOrganalle and the default settings.",
    "crumbs": [
      "Example Fish Project",
      "01 - initialize project"
    ]
  },
  {
    "objectID": "qmd/example_project/02_nextflow.html",
    "href": "qmd/example_project/02_nextflow.html",
    "title": "02 - running Nextflow",
    "section": "",
    "text": "Now that our test project is set up, it’s time to run the analysis workflow. MitoPilot utilizes Nextflow to analyze all of the samples in parallel. Obviously, this is more efficient than a simple serial workflow running one sample at a time.\nTo generate the Nextflow command for the MitoPilot Assemble module, simply click the UPDATE button.\nThere are two ways to run this Nextflow command on Hydra.",
    "crumbs": [
      "Example Fish Project",
      "02 - running Nextflow"
    ]
  },
  {
    "objectID": "qmd/example_project/02_nextflow.html#using-the-gui",
    "href": "qmd/example_project/02_nextflow.html#using-the-gui",
    "title": "02 - running Nextflow",
    "section": "Using the GUI",
    "text": "Using the GUI\nWith the Update window open, click the Start Nextflow button. This will run the analysis pipeline within the MitoPilot GUI. This requires you to keep the GUI open while the pipeline is running.\n\n\n\n\n\n\nNote\n\n\n\nWe recommend only using this method for small numbers of samples. If your internet connection is interrupted, the analysis pipeline will stop. You can resume an interrupted run, but it will waste time and can occasionally cause bugs.\n\n\n\n\n\nFig. 14\n\n\nAnd we’re off! You should see Nextflow output being printed the to Progress window. This window will continually update as the pipeline progresses. As long as the gears in the top right are spinning, the pipeline is still running.\nThe Assemble pipeline module has 3 steps: preprocessing (filtering) the raw FASTQ files with fastp, assembling the mitogenomes using GetOrganelle, and calculating coverage maps for the assemblies using bowtie2.\nNextflow distributes the analyses across multiple batch jobs on the Hydra cluster. This can allow you to run hundreds of samples simultaneously. You can use your Hydra’s job scheduler to check on the status of MitoPilot jobs. Some samples may finish faster than others.\n\n\n\nFig. 15\n\n\nYou may notice that some samples fail at certain steps (though this is unlikely for the test dataset). Often this is due to a memory error, so MitoPilot will retry failed samples with more RAM. The Nextflow log tracks the number of failed samples and retries.\n\n\n\nFig. 16",
    "crumbs": [
      "Example Fish Project",
      "02 - running Nextflow"
    ]
  },
  {
    "objectID": "qmd/example_project/02_nextflow.html#using-a-batch-job",
    "href": "qmd/example_project/02_nextflow.html#using-a-batch-job",
    "title": "02 - running Nextflow",
    "section": "Using a batch job",
    "text": "Using a batch job\nIf you have a large number of samples to process (more than a few dozen), we recommend running the assemble and annotate MitoPilot modules as batch jobs.\nYou will still need to generate the Nextflow command using the MitoPilot GUI. But instead of clicking the Start Nextflow button, copy the Nextflow command and create a batch submission script.\nWe have provided a template below. You may wish to modify the job name (-N) and the log file name (-o).\n#!/bin/sh\n#$ -N MitoPilot_assembly # MODIFY THIS IF DESIRED\n#$ -o MitoPilot_assembly.log # MODIFY THIS IF DESIRED\n#$ -cwd -j y\n#$ -q lTWFM.sq\n#$ -l wfmq\n#$ -pe mthread 2\n#$ -S /bin/sh\n\necho + `date` job $JOB_NAME started in $QUEUE with jobID=$JOB_ID on $HOSTNAME\n\nsource ~/.bashrc\n\nmodule load tools/java/21.0.2 # required for Nextflow on Hydra\n\n# EXAMPLE NEXTFLOW COMMAND\nnextflow -log /pool/public/genomics/macguigand/MitoPilot/22030FL-06-02/run_02/.logs/nextflow.log run /home/macguigand/R/x86_64-pc-linux-gnu-library/4.4/MitoPilot/nextflow -c /pool/public/genomics/macguigand/MitoPilot/22030FL-06-02/run_02/.config -entry WF1\n\necho = `date` job $JOB_NAME done\n\n\n\n\n\n\nImportant\n\n\n\nYou must use the options -q lTWFM.sq and -l wfmq. This is a special Hydra queue for workflow managers like Nextflow. You must also include -pe mthread 2 in order to have enough available RAM for building the MitoPilot Singularity image.\n\n\nMove the submission script into your MitoPilot project directory. In the above example, /pool/public/genomics/macguigand/MitoPilot/22030FL-06-02/run_02/. Then submit the job using qsub MY_SCRIPT_NAME.sh.\nYou can monitor the progress of this job using the qstat command and by checking on the log files. Once the job is done, you can relaunch the GUI to inspect the results. The same approach can be used for the Annotate module.",
    "crumbs": [
      "Example Fish Project",
      "02 - running Nextflow"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MitoPilot Workshop 2025",
    "section": "",
    "text": "Website for the 2025 Smithsonian NMNH MitoPilot workshop."
  }
]